package gui;

import db.DBConnection;
import models.User;

import javax.swing.*;
import java.awt.*;
import java.sql.*;

public class BookingHistoryFrame extends JFrame {
    public BookingHistoryFrame(User user) {
        setTitle("üìã Booking History");
        setSize(600, 400);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        setLayout(new BorderLayout());

        JLabel title = new JLabel("Your Booking History", SwingConstants.CENTER);
        title.setFont(new Font("Arial", Font.BOLD, 20));
        title.setBorder(BorderFactory.createEmptyBorder(10, 0, 10, 0));

        JTextArea historyArea = new JTextArea();
        historyArea.setEditable(false);
        historyArea.setFont(new Font("Monospaced", Font.PLAIN, 14));

        JScrollPane scroll = new JScrollPane(historyArea);

        try (Connection conn = DBConnection.getConnection()) {
            PreparedStatement ps = conn.prepareStatement(
                    "SELECT c.model, c.category, c.price_per_day, b.booking_time, b.is_returned " +
                            "FROM bookings b JOIN cars c ON b.car_id = c.id WHERE b.user_email = ?"
            );
            ps.setString(1, user.getEmail());
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                historyArea.append(
                        "üöó Car: " + rs.getString("model") + " (" + rs.getString("category") + ")\n" +
                                "üí∏ Price/Day: " + rs.getDouble("price_per_day") + "\n" +
                                "üìÖ Booked On: " + rs.getTimestamp("booking_time") + "\n" +
                                "üîÅ Returned: " + (rs.getBoolean("is_returned") ? "Yes ‚úÖ" : "No ‚ùå") + "\n\n"
                );
            }
        } catch (Exception e) {
            e.printStackTrace();
            historyArea.setText("‚ùå Error loading history.");
        }

        add(title, BorderLayout.NORTH);
        add(scroll, BorderLayout.CENTER);
        setVisible(true);
    }
}
