package gui;

import db.DBConnection;
import models.Car;
import models.User;

import javax.swing.*;
import java.awt.*;
import java.sql.*;

public class ReturnVehicleFrame extends JFrame {
    public ReturnVehicleFrame(User user) {
        setTitle("üîÅ Return Vehicle");
        setSize(500, 300);
        setLocationRelativeTo(null);
        setLayout(new BorderLayout());
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);

        JComboBox<Car> carBox = new JComboBox<>();
        JButton returnBtn = new JButton("‚úÖ Return This Car");

        JTextArea result = new JTextArea();
        result.setEditable(false);
        result.setFont(new Font("Arial", Font.PLAIN, 14));
        result.setForeground(Color.BLUE);

        // Load cars not returned yet
        try (Connection conn = DBConnection.getConnection()) {
            PreparedStatement ps = conn.prepareStatement(
                    "SELECT c.id, c.model, c.category, c.price_per_day FROM bookings b JOIN cars c ON b.car_id = c.id " +
                            "WHERE b.user_email = ? AND b.is_returned = 0"
            );
            ps.setString(1, user.getEmail());
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                Car car = new Car(
                        rs.getInt("id"),
                        rs.getString("model"),
                        rs.getString("category"),
                        rs.getDouble("price_per_day"),
                        true
                );
                carBox.addItem(car);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        returnBtn.addActionListener(e -> {
            Car selected = (Car) carBox.getSelectedItem();
            if (selected == null) {
                result.setText("‚ö†Ô∏è No car selected.");
                return;
            }
            try (Connection conn = DBConnection.getConnection()) {
                PreparedStatement ps1 = conn.prepareStatement(
                        "UPDATE bookings SET is_returned = 1 WHERE user_email = ? AND car_id = ?"
                );
                ps1.setString(1, user.getEmail());
                ps1.setInt(2, selected.getId());
                ps1.executeUpdate();

                PreparedStatement ps2 = conn.prepareStatement(
                        "UPDATE cars SET is_available = 1 WHERE id = ?"
                );
                ps2.setInt(1, selected.getId());
                ps2.executeUpdate();

                result.setText("‚úÖ Vehicle returned successfully!");
            } catch (Exception ex) {
                ex.printStackTrace();
                result.setText("‚ùå Failed to return vehicle.");
            }
        });

        JPanel top = new JPanel(new GridLayout(2, 1, 10, 10));
        top.setBorder(BorderFactory.createEmptyBorder(10, 20, 10, 20));
        top.add(new JLabel("Select your booked car:"));
        top.add(carBox);

        add(top, BorderLayout.NORTH);
        add(returnBtn, BorderLayout.CENTER);
        add(result, BorderLayout.SOUTH);

        setVisible(true);
    }
}
